@page "/callingjsbasic"

@inject IJSRuntime JS

<div class="card my-3">
    <h5 class="card-header">Debug Output</h5>
    <div class="card-body">
        <button @onclick=DebugOutString>Output debug string</button>
        <button @onclick=DebugOutObject>Output debug object</button>
    </div>
</div>

<div class="card my-3">
    <h5 class="card-header">Don't Panic</h5>
    <div class="card-body">
        <button @onclick=GetTheAnswer>Get the answer to life, the universe and evenrything</button>
        <button @onclick=ClearTheAnswer>Clear</button>
    </div>
    @if (TheAnswer != null)
    {
        <div class="card-body">
            <p class="card-text">Description: @TheAnswer.Description</p>
            <p class="card-text">Value: @TheAnswer.Value</p>
        </div>
    }
</div>

@code {
    async void DebugOutString()
    {
        await JS.InvokeAsync<bool>("debugOut", "Test String", false, "Here's a string");
    }

    public class Person
    {
        public string Name { get; set; }
        public int Age { get; set; }
    }

    async void DebugOutObject()
    {
        await JS.InvokeAsync<bool>("debugOut", new Person{ Name = "Murat", Age = 29}, true, "Check out this person");
    }

    public class Answer
    {
        public string Description { get; set; }

        public int Value { get; set; }
    }

    Answer TheAnswer { get; set; }

    async Task GetTheAnswer()
    {
        TheAnswer = await JS.InvokeAsync<Answer>("getTheAnswer");
    }

    void ClearTheAnswer()
    {
        TheAnswer = null;
    }
}
